{"version":3,"sources":["components/TodoItem.js","components/Todo.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","padding","borderBottom","background","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todo","console","log","_this2","todos","map","components_TodoItem","headerStyle","textAlign","linkStyle","Header","Link","to","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","get","_this3","BrowserRouter","Route","exact","path","render","components_AddTodo","components_Todo","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef2a15e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      background: '#f4f4f4',\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    }\n  }\n\n  render() {\n    const {id, title} = this.props.todo;\n\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {' '}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\n\nconst btnStyle = {\n  background: '#f00',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 10px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todo extends Component {\n  markComplete = () => {\n    console.log('hello from todo');\n  }\n\n  render() {\n    return this.props.todos.map((todo) => {\n      return <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\n    });\n  }\n}\n\nTodo.propTypes = {\n  todos: PropTypes.array.isRequired\n}\n\nexport default Todo;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst headerStyle = {\n  background: '#333',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px'\n};\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}\n\nexport default function Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\n\n    </header>\n  )\n}\n","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({title: ''});\n  }\n \n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Add Todo...\"\n          style={{flex: '10', padding: '5px'}}\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input type=\"submit\" value=\"Submit\" className=\"btn\" style={{flex: '1'}}/>\n      </form>\n    )\n  }\n}\n\nexport default AddTodo\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>this is the todolist app v1.0.0. It is part of a React crach course</p>\n    </React.Fragment>      \n  )\n}\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/Todo';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}));\n  }\n\n  markComplete = (id) => {\n    this.setState({todos: this.state.todos.map((todo) => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    })});\n  }\n\n  delTodo = (id) => {\n    // this.setState({todos: this.state.todos.filter((todo) => {\n    //   return todo.id !== id;\n    // })});\n    // this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n  }\n\n  addTodo = (title) => {\n    // const newTodo = {\n    //   title: title,\n    //   id: uuid.v4(),\n    //   completed: false\n    // }\n    axios.post('https://jsonplaceholder.typicode.com/todos',{\n      title,\n      completed: false\n    }).then(res => this.setState({todos: [...this.state.todos, res.data]}));\n    \n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"conatiner\">\n            <Header></Header>\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo}/>\n                <Todo todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}